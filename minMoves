/*
给定一个长度为 n 的非空整数数组，找到让数组所有元素相等的最小移动次数。每次移动可以使 n - 1 个元素增加 1。

示例:

输入:
[1,2,3]

输出:
3

解释:
只需要3次移动（注意每次移动会增加两个元素的值）：

[1,2,3]  =>  [2,3,3]  =>  [3,4,3]  =>  [4,4,4]
*/

//每次使其他元素+1,等于每次使指定元素-1，直到每个元素与最小元素相等。

/**
 * @param {number[]} nums
 * @return {number}
 */
var minMoves = function(nums) {
    var minNum = nums.sort((a,b) => a-b)[0];
    var result =0;
    for(var i=0;i<nums.length;i++){
        result += (nums[i]-minNum);
    }
    return result;
};
